name: Build and Deploy Backend app

on:
  push:
    branches:
      - main

jobs:
  maven-build:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.2.0
        env:
          MYSQL_ROOT_PASSWORD: 123456
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: cd spring-boot-data-jpa-mysql && mvn -B package
    - name: Archive JAR file
      uses: actions/upload-artifact@v3
      with:
        name: app
        path: spring-boot-data-jpa-mysql/target/*.jar
        
  docker-build:
      runs-on: ubuntu-latest
      needs: maven-build
  
      steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Download JAR file
        uses: actions/download-artifact@v3
        with:
          name: app
          path: spring-boot-data-jpa-mysql/target  
      - name: Build Docker image
        run: |
          cd spring-boot-data-jpa-mysql && docker build -f "DockerFile" -t aharoud/backend-app:latest .
      - name: Login to Docker Hub
        run: docker login -u aharoud -p ${{ secrets.DOCKER_PASSWORD }} 
      - name: Push the image to Docker Hub
        run: docker push aharoud/backend-app:latest 
        
  deploy:
      runs-on: ubuntu-latest
      needs: docker-build
  
      steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Run MySql container
        run: docker run -d -p 3306:3306 --name mysql-container -e MYSQL_ROOT_PASSWORD=123456 mysql:8.2.0
      - name: Wait for MySQL to be ready
        run: |
          until docker exec -i mysql-container mysqladmin -uroot -ppassword ping --silent; do
            echo 'Waiting for MySQL to be ready...'
            sleep 5
          done
          
      - name: Run backend-app container
        run: |
          docker run -d -p 8080:8080 --name backend-app  aharoud/backend-app:latest
          sleep 10 
  
      - name: Test application
        run: |
          curl http://localhost:8080/tutorials
