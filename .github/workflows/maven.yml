name: Build and Package Backend app

on:
  push:
    branches:
      - main
    paths:
      - 'spring-boot-data-jpa-mysql/**' 
      - '.github/workflows/maven.yml'
      - '!README.md'
      - '!angular-16-crud-example/README.md'
      - '!spring-boot-data-jpa-mysql/README.md'
      
jobs:
  maven-build:
    if: "contains(github.event.head_commit.message, 'run-workflow')"
    runs-on: ubuntu-latest
    
    services:
      mysql:
        image: mysql:8.2.0
        env:
          MYSQL_ROOT_PASSWORD: password
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
    - uses: actions/checkout@v3
    - name: Build maven app
      uses: ./actions/maven-build-action
      with:
        directory: spring-boot-data-jpa-mysql
    - name: Archive JAR file
      uses: actions/upload-artifact@v3
      with:
        name: app
        path: spring-boot-data-jpa-mysql/target/*.jar
        
  docker-build:
    runs-on: ubuntu-latest
    needs: maven-build
    outputs:
      version: ${{ steps.extract-version.outputs.version }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Download JAR file
      uses: actions/download-artifact@v3
      with:
        name: app
        path: spring-boot-data-jpa-mysql/target  
    - name: Extract Docker Image Version
      uses: ./actions/extract-docker-image-action
      with:
        commit-message: "${{ github.event.head_commit.message }}"
    - name: Build Docker image
      run: |
        cd spring-boot-data-jpa-mysql && docker build -f "DockerFile" -t aharoud/backend-app:${{ env.version }} .
    - name: Login to Docker Hub
      run: docker login -u aharoud -p ${{ secrets.DOCKER_PASSWORD }} 
    - name: Push the image to Docker Hub
      run: docker push aharoud/backend-app:${{ env.version }}

